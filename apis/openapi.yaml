openapi: 3.0.1
info:
  title: Ticketing System API
  description: A simple API for managing events and tickets in a ticketing system.
  version: 1.0.0

servers:
  - url: http://localhost:8080/api

paths:
  /events:
    get:
      summary: Get all events
      responses:
        '200':
          description: A list of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
    post:
      summary: Create a new event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          description: Event created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'

  /events/{eventId}:
    get:
      summary: Get a specific event by ID
      parameters:
        - name: eventId
          in: path
          required: true
          description: The ID of the event to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Event details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found

    put:
      summary: Update an existing event
      parameters:
        - name: eventId
          in: path
          required: true
          description: The ID of the event to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          description: Event updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found

    delete:
      summary: Delete an event
      parameters:
        - name: eventId
          in: path
          required: true
          description: The ID of the event to delete
          schema:
            type: string
      responses:
        '204':
          description: Event deleted successfully
        '404':
          description: Event not found

  /tickets:
    get:
      summary: Get all tickets
      responses:
        '200':
          description: A list of tickets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'
    post:
      summary: Create a new ticket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '201':
          description: Ticket created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'

  /tickets/{ticketId}:
    get:
      summary: Get a specific ticket by ID
      parameters:
        - name: ticketId
          in: path
          required: true
          description: The ID of the ticket to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Ticket details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '404':
          description: Ticket not found

    put:
      summary: Update an existing ticket
      parameters:
        - name: ticketId
          in: path
          required: true
          description: The ID of the ticket to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '200':
          description: Ticket updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '404':
          description: Ticket not found

    delete:
      summary: Delete a ticket
      parameters:
        - name: ticketId
          in: path
          required: true
          description: The ID of the ticket to delete
          schema:
            type: string
      responses:
        '204':
          description: Ticket deleted successfully
        '404':
          description: Ticket not found

components:
  schemas:
    Event:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the event
        name:
          type: string
          description: Name of the event
        description:
          type: string
          description: Description of the event
        date:
          type: string
          format: date-time
          description: Date and time of the event
        location:
          type: string
          description: Location of the event

    Ticket:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the ticket
        eventId:
          type: string
          description: The ID of the event the ticket belongs to
        price:
          type: number
          format: float
          description: Price of the ticket
        seat:
          type: string
          description: Seat number for the ticket (if applicable)
        status:
          type: string
          enum: [available, sold]
          description: The status of the ticket (available or sold)
