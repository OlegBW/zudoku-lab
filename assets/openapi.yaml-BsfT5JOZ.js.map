{"version":3,"file":"openapi.yaml-BsfT5JOZ.js","sources":["../../node_modules/.zudoku/processed/openapi.yaml.js"],"sourcesContent":["const __refs = Array.from({ length: 2 }, () => ({}));\nconst __refMap = {\n  \"#/components/schemas/Event\": __refs[0],\n  \"#/components/schemas/Ticket\": __refs[1]\n};\nconst __refMapPaths = Object.keys(__refMap);\nObject.assign(__refs[0], {\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the event\"\n    },\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"Name of the event\"\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"description\": \"Description of the event\"\n    },\n    \"date\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Date and time of the event\"\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"description\": \"Location of the event\"\n    }\n  }\n});\nObject.defineProperty(__refs[0], \"__$ref\", { value: __refMapPaths[0], enumerable: false });\nObject.assign(__refs[1], {\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the ticket\"\n    },\n    \"eventId\": {\n      \"type\": \"string\",\n      \"description\": \"The ID of the event the ticket belongs to\"\n    },\n    \"price\": {\n      \"type\": \"number\",\n      \"format\": \"float\",\n      \"description\": \"Price of the ticket\"\n    },\n    \"seat\": {\n      \"type\": \"string\",\n      \"description\": \"Seat number for the ticket (if applicable)\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"available\",\n        \"sold\"\n      ],\n      \"description\": \"The status of the ticket (available or sold)\"\n    }\n  }\n});\nObject.defineProperty(__refs[1], \"__$ref\", { value: __refMapPaths[1], enumerable: false });\nexport const schema = {\n  \"openapi\": \"3.1.1\",\n  \"info\": {\n    \"title\": \"Ticketing System API\",\n    \"description\": \"A simple API for managing events and tickets in a ticketing system.\",\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:8080/api\"\n    }\n  ],\n  \"paths\": {\n    \"/events\": {\n      \"get\": {\n        \"summary\": \"Get all events\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A list of events\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": __refMap[\"#/components/schemas/Event\"]\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a new event\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/Event\"]\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Event created successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/Event\"]\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/events/{eventId}\": {\n      \"get\": {\n        \"summary\": \"Get a specific event by ID\",\n        \"parameters\": [\n          {\n            \"name\": \"eventId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The ID of the event to retrieve\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Event details\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/Event\"]\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Event not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update an existing event\",\n        \"parameters\": [\n          {\n            \"name\": \"eventId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The ID of the event to update\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/Event\"]\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Event updated successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/Event\"]\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Event not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete an event\",\n        \"parameters\": [\n          {\n            \"name\": \"eventId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The ID of the event to delete\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Event deleted successfully\"\n          },\n          \"404\": {\n            \"description\": \"Event not found\"\n          }\n        }\n      }\n    },\n    \"/tickets\": {\n      \"get\": {\n        \"summary\": \"Get all tickets\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A list of tickets\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": __refMap[\"#/components/schemas/Ticket\"]\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a new ticket\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/Ticket\"]\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Ticket created successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/Ticket\"]\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/tickets/{ticketId}\": {\n      \"get\": {\n        \"summary\": \"Get a specific ticket by ID\",\n        \"parameters\": [\n          {\n            \"name\": \"ticketId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The ID of the ticket to retrieve\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ticket details\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/Ticket\"]\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Ticket not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update an existing ticket\",\n        \"parameters\": [\n          {\n            \"name\": \"ticketId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The ID of the ticket to update\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/Ticket\"]\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ticket updated successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/Ticket\"]\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Ticket not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a ticket\",\n        \"parameters\": [\n          {\n            \"name\": \"ticketId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The ID of the ticket to delete\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Ticket deleted successfully\"\n          },\n          \"404\": {\n            \"description\": \"Ticket not found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Event\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the event\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the event\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"Description of the event\"\n          },\n          \"date\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Date and time of the event\"\n          },\n          \"location\": {\n            \"type\": \"string\",\n            \"description\": \"Location of the event\"\n          }\n        }\n      },\n      \"Ticket\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the ticket\"\n          },\n          \"eventId\": {\n            \"type\": \"string\",\n            \"description\": \"The ID of the event the ticket belongs to\"\n          },\n          \"price\": {\n            \"type\": \"number\",\n            \"format\": \"float\",\n            \"description\": \"Price of the ticket\"\n          },\n          \"seat\": {\n            \"type\": \"string\",\n            \"description\": \"Seat number for the ticket (if applicable)\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"available\",\n              \"sold\"\n            ],\n            \"description\": \"The status of the ticket (available or sold)\"\n          }\n        }\n      }\n    }\n  }\n};\nexport const slugs = {\n  operations: {\"/events-get-Get all events\":\"get-all-events\",\"/events-post-Create a new event\":\"create-a-new-event\",\"/events/{eventId}-get-Get a specific event by ID\":\"get-a-specific-event-by-id\",\"/events/{eventId}-put-Update an existing event\":\"update-an-existing-event\",\"/events/{eventId}-delete-Delete an event\":\"delete-an-event\",\"/tickets-get-Get all tickets\":\"get-all-tickets\",\"/tickets-post-Create a new ticket\":\"create-a-new-ticket\",\"/tickets/{ticketId}-get-Get a specific ticket by ID\":\"get-a-specific-ticket-by-id\",\"/tickets/{ticketId}-put-Update an existing ticket\":\"update-an-existing-ticket\",\"/tickets/{ticketId}-delete-Delete a ticket\":\"delete-a-ticket\"},\n  tags: {},\n};"],"names":["__refs","__refMap","__refMapPaths","schema","slugs"],"mappings":"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","x_google_ignoreList":[0]}